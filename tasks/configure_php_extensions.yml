---

# Determine correct ini file to use.

# First loop over possible ini files and get stats.
- name: Find candidates for {{ php_extension_configuration }} extension ini file
  ansible.builtin.stat:
    path: /etc/php/{{ php_version }}/{{ php_web_server_daemon }}/conf.d/{{ item }}-{{ php_extension_configuration }}.ini
  register: php_extenstion_ini_file_candidates
  # Let's be sloppy here. Assume that possible priorities are 10, 15 and 20.
  with_items: [10, 15, 20]

# Then pick the ini file that actually exists.
- name: Pick correct {{ php_extension_configuration }} extension ini file
  ansible.builtin.set_fact:
    php_extension_ini_file: "{{ item.stat.path }}"
    php_extension_ini_file_mode: "{{ item.stat.mode }}"
  loop:
    "{{ php_extenstion_ini_file_candidates.results }}"
  loop_control:
    label: "{{ item.item }}-{{ php_extension_configuration }}.ini"
  when:
    item.stat | default(false) and item.stat.exists

# Configure PHP extension.
- name: Configure {{ php_extension_configuration }} extension
  community.general.ini_file:
    dest: "{{ php_extension_ini_file }}"
    section: null
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    mode: "{{ php_extension_ini_file_mode }}"
  with_dict:
    "{{ php_extensions_configuration[php_extension_configuration] }}"
