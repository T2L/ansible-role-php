---
- name: Check if 'software-properties-common' package exists
  command: apt search software-properties-common
  register: software_properties_common_exists
  changed_when: false

- name: Update apt cache
  apt:
    update_cache: true
  when: "'software-properties-common' not in software_properties_common_exists.stdout"

- name: Install base packages
  apt:
    name:
      - software-properties-common
    state: present

# Add the main PPA for PHP. See https://launchpad.net/~ondrej/+archive/ubuntu/php
- name: Add the main PPA for PHP
  apt_repository:
    repo: ppa:ondrej/php
    state: present
    update_cache: true
    mode: 0644

# Install PHP.
- name: Install PHP
  apt:
    name: php{{ php_version }}
    state: present
    update_cache: true
    cache_valid_time: 86400
  notify:
    - Restart web server

- name: Set default PHP version for the CLI
  alternatives:
    name: php
    path: "/usr/bin/php{{ php_version }}"

# By default, php extensions come as phpVERSION-EXTENSION, but some omit the
# VERSION part, i.e. use php-EXTENSION.
- name: Check whether the package with a default name exists
  command: "aptitude search '^php{{ php_version }}-{{ item }}$'"
  register: php_extenstions_default_names_exist
  loop: "{{ php_extensions }}"
  changed_when: false
  failed_when: php_extenstions_default_names_exist.stderr | length > 0

- name: Generate list of PHP extensions names to install (with PHP version)
  set_fact:
    php_extenstions_names:
      "{{ php_extenstions_names | default([]) + ['php' + php_version | string + '-' + item.item] }}"
  loop: "{{ php_extenstions_default_names_exist.results }}"
  when: item.rc == 0
  loop_control:
    label: "{{ item.item }}"
  changed_when: false

- name: Generate list of PHP extensions names to install (no PHP version)
  set_fact:
    php_extenstions_names: "{{ php_extenstions_names | default([]) + ['php-' + item.item] }}"
  loop: "{{ php_extenstions_default_names_exist.results }}"
  when: item.rc == 1
  loop_control:
    label: "{{ item.item }}"
  changed_when: false

# Install PHP extensions.
- name: Install PHP extensions
  apt:
    name: "{{ php_extenstions_names | list }}"
    state: present
  notify:
    - Restart web server

# Configure Apache2 web server.
- include: configure_apache2.yml
  when:
    php_web_server_daemon == "apache2"

# Configure PHP.
- include: configure_php.yml
  with_items:
    "{{ php_configuration }}"
  loop_control:
    loop_var: php_configuration_section

# Configure PHP CLI.
- include: configure_php_cli.yml
  with_items:
    "{{ php_cli_configuration }}"
  loop_control:
    loop_var: php_cli_configuration_section

# Configure PHP extensions.
- include: configure_php_extensions.yml
  with_items:
    "{{ php_extensions_configuration }}"
  loop_control:
    loop_var: php_extension_configuration
